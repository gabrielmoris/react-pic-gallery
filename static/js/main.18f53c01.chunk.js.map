{"version":3,"sources":["../../src/CircularLoading.jsx","../../src/ImgLazyLoading.jsx","../../src/styles.js","../../src/ImgLightbox.jsx","../../src/index.tsx","App.jsx","index.jsx"],"names":["extraStyle","CircularLoading","styleTag","document","sheet","className","ImgLazyLoading","props","React","ac","fetch","response","blob","setImgSrcUrl","URL","src","alt","style","onClick","height","width","display","alignItems","alignContent","justifyContent","background","border","styles","position","top","left","backdropFilter","zIndex","float","textDecoration","color","padding","borderRadius","textAlign","minWidth","gridTemplateColumns","gridTemplateRows","gap","ImgLightbox","DescriptionCustomBox","imgSrc","event","target","ModalDiv","LbButtonsDiv","href","download","ABtn","LbButton","imgSrcUrl","margin","defaultScale","options","limitToBounds","limitToWrapper","transformEnabled","centerContent","id","maxWidth","maxHeight","imgObj","onClose","DescriptionDiv","fontSize","cursor","right","defaultOptions","downloadBtnDisplay","descriptionBoxDisplay","navigation","useEffect","setOpen","Wrapper","open","onNavigation","action","modalImgIndex","setModalImgIndex","hasPrevious","hasNext","Grid","key","element","fullSrc","overflow","minHeight","flexShrink","listOfImages","thumbnailSrc","description","hello","External","useState","lightboxNode","setLightboxNode","children","imgList","externalLightbox","setExtLightboxChildren","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.18f53c01.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst extraStyle = `\r\n.lds-dual-ring {\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n}\r\n.lds-dual-ring:after {\r\n  content: \" \";\r\n  display: block;\r\n  width: 32px;\r\n  height: 32px;\r\n  margin: 8px;\r\n  border-radius: 50%;\r\n  border: 3px solid rgba(185, 185, 185, 0.466);\r\n  border-color: rgba(185, 185, 185, 0.466) transparent rgba(185, 185, 185, 0.466) transparent;\r\n  animation: lds-dual-ring 1.2s linear infinite;\r\n}\r\n@keyframes lds-dual-ring {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n`\r\n\r\n// 3. Lightbox and Image Component\r\n\r\nexport default function CircularLoading() {\r\n  const styleTag = document.querySelector('#react-pic-style')\r\n  if (!styleTag) {\r\n    const sheet = document.createElement('style')\r\n    sheet.id = 'react-pic-style'\r\n    sheet.innerHTML = extraStyle\r\n    document.body.appendChild(sheet)\r\n  }else{\r\n    styleTag.innerHTML = styleTag.innerText + extraStyle;\r\n  }\r\n  return <div className='lds-dual-ring'></div>\r\n}\r\n","import React from 'react'\r\nimport CircularLoading from './CircularLoading'\r\n\r\n// const ImgLazyLoading = (props: {\r\n//   imgSrc: string\r\n//   style: React.CSSProperties\r\n//   onClick: () => void\r\n// }) => {\r\n\r\nconst ImgLazyLoading = (props) => {\r\n    const [imgSrcUrl, setImgSrcUrl] = React.useState('')\r\n  \r\n    React.useEffect(() => {\r\n      const ac = new AbortController()\r\n      if (props.imgSrc) {\r\n        fetch(props.imgSrc)\r\n          .then((response) => response.blob())\r\n          .then((blob) => {\r\n            setImgSrcUrl(URL.createObjectURL(blob))\r\n          })\r\n      }\r\n      return () => {\r\n        ac.abort()\r\n      } // cleanup function\r\n    }, [props.imgSrc])\r\n  \r\n    if (imgSrcUrl) {\r\n      return (\r\n        <img\r\n          src={imgSrcUrl}\r\n          alt=''\r\n          style={{\r\n            ...props.style\r\n          }}\r\n          onClick={() => {\r\n            props.onClick()\r\n          }}\r\n        />\r\n      )\r\n    } else {\r\n      return (\r\n        <div\r\n          style={{\r\n            height: '100%',\r\n            width: '100%',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            alignContent: 'center',\r\n            justifyContent: 'center',\r\n            background: 'rgba(0, 0, 0, 0.157)',\r\n            border: '1px solid rgba(0, 0, 0,0.3)'\r\n          }}\r\n        >\r\n          <CircularLoading />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  export default ImgLazyLoading;","let styles = {}\r\n\r\nstyles.ModalDiv = {\r\n  position: 'fixed',\r\n  top: 0,\r\n  left: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  background: `rgba(0, 0, 0, 0.454)`,\r\n  backdropFilter: 'blur(6px)',\r\n  display: 'flex',\r\n  zIndex: 9999999,\r\n  display: 'grid',\r\n  gridTemplateRows: '60px | auto | 300px',\r\n  justifyContent: 'center',\r\n  alignContent: 'center'\r\n}\r\n\r\nstyles.LbButtonsDiv = {\r\n  position: 'absolute',\r\n  top: '10px',\r\n  width: 'calc(100% - 20px)'\r\n}\r\n\r\nstyles.LbButton = {\r\n  float: 'right',\r\n  textDecoration: 'none',\r\n  color: 'white',\r\n  padding: '5px',\r\n  border: '1px solid white',\r\n  borderRadius: '5px'\r\n}\r\nstyles.ABtn = {\r\n  float: 'right',\r\n  textDecoration: 'none',\r\n  color: 'white'\r\n}\r\n\r\nstyles.DescriptionDiv = {\r\n  background: 'white',\r\n  padding: '10px',\r\n  color: '#666',\r\n  textAlign: 'center',\r\n  position:'relative',\r\n  zIndex:-1,\r\n}\r\n\r\nstyles.Wrapper = {\r\n  display: 'flex',\r\n  width: '100%',\r\n  minWidth: 200,\r\n  height: '100%'\r\n}\r\n\r\nstyles.Grid = {\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(3, 1fr)',\r\n  gridTemplateRows: '1fr',\r\n  gap: '2px',\r\n  width: '100%',\r\n  height: 'auto'\r\n}\r\n\r\nexport default styles;","import React from 'react'\r\nimport { TransformComponent, TransformWrapper } from 'react-zoom-pan-pinch'\r\nimport CircularLoading from './CircularLoading'\r\nimport styles from './styles'\r\n\r\n// const ImgLightbox = (props: {\r\n//   imgObj: imageObject | null\r\n//   options?: Options\r\n//   onClose: () => void\r\n//   onNavigation: (arg0: 'next' | 'previous') => void\r\n//   hasPrevious: boolean\r\n//   hasNext: boolean\r\n// }) => {\r\n\r\nconst ImgLightbox = (props) => {\r\n  const [imgSrcUrl, setImgSrcUrl] = React.useState('')\r\n\r\n  const DescriptionCustomBox = props.options.descriptionCustomBox\r\n\r\n  React.useEffect(() => {\r\n    const imgSrc = props.imgObj?.fullSrc\r\n      ? props.imgObj.fullSrc\r\n      : props.imgObj?.thumbnailSrc\r\n      ? props.imgObj.thumbnailSrc\r\n      : null\r\n    if (imgSrc) {\r\n      fetch(imgSrc)\r\n        .then((response) => response.blob())\r\n        .then((blob) => {\r\n          setImgSrcUrl(URL.createObjectURL(blob))\r\n        })\r\n    }\r\n    // fixing body scrolling while lightbox is open\r\n    document.body.style.overflow = 'hidden'\r\n  }, [props.imgObj])\r\n\r\n  return (\r\n    <div\r\n      className='reactPic-lightbox'\r\n      onClick={(event) => {\r\n        document.body.style.overflow = ''\r\n        const target = event.target\r\n\r\n        if (target.className === 'reactPic-lightbox') {\r\n          props.onClose()\r\n        }\r\n      }}\r\n      style={styles.ModalDiv}\r\n    >\r\n      <div style={styles.LbButtonsDiv}>\r\n        {props.options?.downloadBtnDisplay ||\r\n        props.options?.downloadCustomBtn ? (\r\n          props.options.downloadCustomBtn ? (\r\n            <a href={imgSrcUrl} download style={styles.ABtn}>\r\n              {props.options.downloadCustomBtn()}\r\n            </a>\r\n          ) : (\r\n            <a href={imgSrcUrl} download style={styles.LbButton}>\r\n              Download\r\n            </a>\r\n          )\r\n        ) : null}\r\n      </div>\r\n\r\n      {imgSrcUrl === '' ? (\r\n        <div style={{ display: 'block', margin: 'auto' }}>\r\n          <CircularLoading />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n        <TransformWrapper\r\n          defaultScale={1}\r\n          options={{\r\n            limitToBounds: true,\r\n            limitToWrapper: true,\r\n            transformEnabled: true,\r\n            centerContent:true,\r\n          }}\r\n        >\r\n            <TransformComponent>\r\n              <img\r\n                src={imgSrcUrl}\r\n                alt=''\r\n                id='lightboxImg'\r\n                style={{\r\n                  maxWidth: '80vw',\r\n                  maxHeight: 'calc(80vh - 20px)',\r\n                  margin: 'auto',\r\n                  zIndex: 99999999999\r\n                }}\r\n              />\r\n            </TransformComponent>\r\n          {props.options?.descriptionBoxDisplay ? (\r\n            props.imgObj?.description || DescriptionCustomBox  ? (\r\n              DescriptionCustomBox ? (\r\n                <DescriptionCustomBox imgObj={props.imgObj} onClose={props.onClose}>\r\n                  {props.imgObj?.description}\r\n                </DescriptionCustomBox>\r\n              ) : (\r\n                <div\r\n                  className='reactPic-description'\r\n                  style={styles.DescriptionDiv}\r\n                >\r\n                  {props.imgObj?.description}\r\n                </div>\r\n              )\r\n            ) : null\r\n          ) : null}\r\n        </TransformWrapper>\r\n          {props.hasPrevious && (\r\n            <div\r\n            className=\"react-lightbox-prevBtn\"\r\n              style={{\r\n                position: 'absolute',\r\n                left: 20,\r\n                top: '50%',\r\n                fontSize: 50,\r\n                cursor: 'pointer',\r\n                color:'white',\r\n                display: props.options.hidePagination ? 'none' : 'inherit'\r\n              }}\r\n              onClick={() => {\r\n                props.onNavigation('previous')\r\n              }}\r\n            >\r\n              &#8249;\r\n            </div>\r\n          )}\r\n\r\n          {props.hasNext && (\r\n            <div\r\n              className=\"react-lightbox-nextBtn\"\r\n              style={{\r\n                position: 'absolute',\r\n                right: 20,\r\n                top: '50%',\r\n                fontSize: 50,\r\n                cursor: 'pointer',\r\n                color:'white',\r\n                display: props.options.hidePagination ? 'none' : 'inherit'\r\n              }}\r\n              onClick={() => {\r\n                props.onNavigation('next')\r\n              }}\r\n            >\r\n              &#8250;\r\n            </div>\r\n          )}\r\n          </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImgLightbox\r\n","import React, { useEffect } from 'react'\r\nimport ImgLazyLoading from './ImgLazyLoading'\r\nimport ImgLightbox from './ImgLightbox'\r\nimport styles from './styles'\r\n\r\n// 1. Types Declaration\r\n\r\nexport interface imageObject {\r\n  fullSrc: string;\r\n  thumbnailSrc?: string;\r\n  description?: string;\r\n  [key: string]: string\r\n}\r\n\r\nexport interface Options {\r\n  downloadBtnDisplay?: boolean;\r\n  downloadCustomBtn?: (props: { imgObj: imageObject }) => Element;\r\n  descriptionBoxDisplay?: boolean;\r\n  descriptionCustomBox?: (props: { imgObj: imageObject }) => Element;\r\n  externalLightbox?: boolean;\r\n  hidePagination?: boolean;\r\n  rowHeight?: string | number;\r\n}\r\n\r\n// 2. Styles\r\n\r\nconst extraStyle = `\r\n`\r\n\r\n// 3. Lightbox and Image Component\r\n\r\n// 4. Main Component\r\n\r\n// 4.1. Default Options\r\n\r\nconst defaultOptions = {\r\n  downloadBtnDisplay: true,\r\n  descriptionBoxDisplay: true,\r\n  navigation: true\r\n}\r\n\r\n// 4.2. Main\r\n\r\nexport default function PicGallery(props: {\r\n  imgList: imageObject[];\r\n  options?: Options,\r\n  bottomCustomContent?: (imgObject) => Element,\r\n  setExtLightboxChildren?: (imgLightbox: React.Node) => void\r\n}) {\r\n  // export default function PicGallery(props) {\r\n  const [open, setOpen] = React.useState(false)\r\n  const [modalImgIndex, setModalImgIndex] = React.useState(0)\r\n\r\n  const options: Options = { ...defaultOptions, ...props.options }\r\n\r\n  // solving lightbox not in full screen problem\r\n  useEffect(() => {\r\n    //TODO: add setExtLightboxChildren to Lightbox\r\n    if (typeof props.setExtLightboxChildren == 'function') {\r\n\r\n      if (open) {\r\n        props.setExtLightboxChildren(\r\n          <ImgLightbox\r\n            imgObj={props.imgList[modalImgIndex]}\r\n            options={options}\r\n            onClose={() => {\r\n              setOpen(false)\r\n            }}\r\n          />\r\n        )\r\n      } else {\r\n        props.setExtLightboxChildren(null)\r\n      }\r\n    }\r\n  }, [open])\r\n\r\n  // allowing full screen zooming on react-zoom library\r\n  const styleTag = document.querySelector('#react-pic-style')\r\n  if (!styleTag) {\r\n    const sheet = document.createElement('style')\r\n    sheet.innerHTML =\r\n      '.react-transform-component { overflow: unset !important; }' + extraStyle;\r\n    sheet.id = 'react-pic-style';\r\n    document.body.appendChild(sheet)\r\n  } else {\r\n    styleTag.innerHTML = styleTag.innerHTML + extraStyle\r\n  }\r\n\r\n  return (\r\n    <div className='reactPic-wrapper' style={styles.Wrapper}>\r\n      {open && !props.options.externalLightbox ? (\r\n        <ImgLightbox\r\n          imgObj={props.imgList[modalImgIndex]}\r\n          options={options}\r\n          onNavigation={(action) => {\r\n            if (action === 'next' && modalImgIndex + 1 < props.imgList.length) {\r\n              setModalImgIndex(modalImgIndex + 1)\r\n            } else if (action === 'previous' && modalImgIndex - 1 >= 0) {\r\n              setModalImgIndex(modalImgIndex - 1)\r\n            }\r\n          }}\r\n          onClose={() => {\r\n            setOpen(false)\r\n          }}\r\n          hasPrevious={modalImgIndex - 1 >= 0 ? true : false}\r\n          hasNext={modalImgIndex + 1 < props.imgList.length ? true : false}\r\n        />\r\n      ) : null}\r\n      <div className='reactPic-grid' style={styles.Grid}>\r\n        {props.imgList.map((element, count) => {\r\n          return (\r\n            <div\r\n              key={\r\n                element.thumbnailSrc ? element.thumbnailSrc : element.fullSrc\r\n              }\r\n              className='reactPic-imgDiv'\r\n              style={{\r\n                overflow: 'hidden',\r\n                width: '100%',\r\n                height: '100%',\r\n                minHeight: '150px'\r\n              }}\r\n            >\r\n              <div\r\n                className='reactPic-innerImgDiv'\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  overflow: 'hidden !important',\r\n                  width: '100%',\r\n                  height: options.rowHeight ? options.rowHeight : '150px',\r\n                  cursor: 'pointer'\r\n                }}\r\n              >\r\n                <ImgLazyLoading\r\n                  imgSrc={\r\n                    element.thumbnailSrc\r\n                      ? element.thumbnailSrc\r\n                      : element.fullSrc\r\n                  }\r\n                  style={{\r\n                    flexShrink: 0,\r\n                    minWidth: '100%',\r\n                    minHeight: '100%'\r\n                  }}\r\n                  onClick={() => {\r\n                    setModalImgIndex(count)\r\n                    setOpen(!open)\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PicGallery from 'react-pic-gallery'\r\nimport './App.css'\r\n\r\nconst listOfImages = [\r\n  {\r\n    thumbnailSrc: 'https://picsum.photos/id/237/200/300',\r\n    fullSrc: 'https://picsum.photos/id/237/800/600',\r\n    description: 'A Dog standing on a wooden floor.'\r\n  },\r\n  {\r\n    thumbnailSrc: 'https://picsum.photos/id/154/200/150',\r\n    fullSrc: 'https://picsum.photos/id/154/200/150',\r\n    hello: 'hello, there!'\r\n  },\r\n  {\r\n    thumbnailSrc: 'https://picsum.photos/id/385/300/200',\r\n    fullSrc: 'https://picsum.photos/id/385/800/600'\r\n  },\r\n  {\r\n    thumbnailSrc: 'https://picsum.photos/id/25/100/250',\r\n    fullSrc: 'https://picsum.photos/id/25/100/250'\r\n  },\r\n  {\r\n    thumbnailSrc: 'https://picsum.photos/id/35/120/200',\r\n    fullSrc: 'https://picsum.photos/id/35/800/600'\r\n  },\r\n  {\r\n    thumbnailSrc: 'https://picsum.photos/id/84/280/185',\r\n    fullSrc: 'https://picsum.photos/id/84/800/600'\r\n  },\r\n  {\r\n    thumbnailSrc: 'https://picsum.photos/id/185/200/300',\r\n    fullSrc: 'https://picsum.photos/id/185/800/600'\r\n  },\r\n  {\r\n    thumbnailSrc: 'https://picsum.photos/id/55/200/150',\r\n    fullSrc: 'https://picsum.photos/id/55/800/600'\r\n  },\r\n  {\r\n    thumbnailSrc: 'https://picsum.photos/id/852/300/200',\r\n    fullSrc: 'https://picsum.photos/id/852/800/600'\r\n  }\r\n]\r\n\r\n// const DownBtn = ()=>{\r\n//   return <div>Download</div>\r\n// }\r\n\r\n// const DescBox = (props)=>{\r\n//   console.log(\"here\")\r\n//   return <div style={{background:'red'}}>{props.imgObj.hello}</div>\r\n// }\r\n\r\n\r\nconst External = () => {\r\n  const [lightboxNode, setLightboxNode] = React.useState(<></>)\r\n  \r\n  const options2 = {\r\n    downloadBtnDisplay:false,\r\n    // downloadCustomBtn:DownBtn,\r\n    // descriptionBoxDisplay:true,\r\n    // descriptionCustomBox:DescBox\r\n    // hidePagination: true\r\n    externalLightbox: true\r\n  }\r\n  return (\r\n    <>\r\n      <div children={lightboxNode}></div>\r\n      <PicGallery imgList={listOfImages} options={options2} setExtLightboxChildren={(children)=>setLightboxNode(children)} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const options = {\r\n    // downloadBtnDisplay:true,\r\n    // downloadCustomBtn:DownBtn,\r\n    // descriptionBoxDisplay:true,\r\n    // descriptionCustomBox:DescBox\r\n    // hidePagination: true\r\n    // externalLightbox: true\r\n  }\r\n  return (\r\n    <>\r\n      <div className='card'>\r\n        <h1>react-pic-gallery</h1>\r\n        <hr />\r\n        <p>Image gallery and lightbox</p>\r\n\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n          }}\r\n        >\r\n          <div style={{ maxWidth: 300 }}>\r\n            <PicGallery imgList={listOfImages} options={options} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='card'>\r\n        <h2>External Lightbox</h2>\r\n        <p>If your PicGallery is a child component of a child component of a ..., the lightbox might show up inside the components. In order to correct this problem you can use an external component and pass the lightbox to it everytime a picture is opened.</p>\r\n        <External />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}