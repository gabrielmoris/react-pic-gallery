{"version":3,"sources":["../../src/index.tsx","App.tsx","index.tsx"],"names":["ModalDiv","styled","LbButtonsDiv","LbButton","ABtn","DescriptionDiv","Wrapper","display","width","minWidth","height","Grid","gridTemplateColumns","gridTemplateRows","gap","CircularLoading","circularLoading","distance","dotSize","num","dotColor0","dotColor1","dotColor2","ImgLazyLoading","props","React","ac","fetch","response","blob","setImgSrcUrl","URL","src","imgSrcUrl","alt","style","onClick","alignItems","alignContent","justifyContent","background","border","ImgLightbox","imgSrc","document","className","event","target","href","download","margin","defaultScale","options","paddingBottom","paddingTop","id","maxWidth","maxHeight","zIndex","position","left","top","fontSize","cursor","right","defaultOptions","downloadBtnDisplay","descriptionBoxDisplay","navigation","sheet","open","imgObj","onNavigation","action","modalImgIndex","setModalImgIndex","onClose","setOpen","key","element","fullSrc","overflow","minHeight","flexShrink","listOfImages","thumbnailSrc","description","App","imgList","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5439ccf7.chunk.js","sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport * as React from 'react'\r\nimport styled from 'styled-components'\r\nimport { circularLoading } from '@yami-beta/react-circular-loading'\r\nimport { TransformWrapper, TransformComponent } from 'react-zoom-pan-pinch'\r\nimport './styles.css'\r\n\r\n// 1. Types Declaration\r\n\r\nexport interface imageObject {\r\n  fullSrc: string\r\n  thumbnailSrc?: string\r\n  description?: string\r\n}\r\n\r\nexport interface Options {\r\n  downloadBtnDisplay?: boolean\r\n  downloadCustomBtn?: () => JSX.Element\r\n  // shareBtnDisplay?:boolean\r\n  descriptionBoxDisplay?: boolean\r\n  descriptionCustomBox?: (props: { children: any }) => JSX.Element\r\n  rowHeight?: number\r\n  navigation?: boolean\r\n}\r\n\r\n// 2. Styled Components\r\nconst ModalDiv = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.774);\r\n  /* backdrop-filter: blur(6px); */\r\n  display: flex;\r\n  z-index: 9999999;\r\n  justify-content: center;\r\n`\r\n\r\nconst LbButtonsDiv = styled.div`\r\n  position: absolute;\r\n  top: 10px;\r\n  width: calc(100% - 20px);\r\n`\r\n\r\nconst LbButton = styled.a`\r\n  float: right;\r\n  text-decoration: none;\r\n  color: white;\r\n  padding: 5px;\r\n  border: 1px solid white;\r\n  border-radius: 5px;\r\n`\r\nconst ABtn = styled.a`\r\n  float: right;\r\n  text-decoration: none;\r\n  color: white;\r\n`\r\n\r\nconst DescriptionDiv = styled.div`\r\n  background: white;\r\n  position: fixed;\r\n  bottom: 0px;\r\n  padding: 10px;\r\n  width: 100%;\r\n  color:#666;\r\n  text-align: center;\r\n  max-height: 60px;\r\n  overflow-y: scroll;\r\n`\r\n\r\nconst Wrapper = styled.div({\r\n  display: 'flex',\r\n  width: '100%',\r\n  minWidth: 200,\r\n  height: '100%'\r\n})\r\n\r\nconst Grid = styled.div({\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(3, 1fr)',\r\n  gridTemplateRows: '1fr',\r\n  gap: '2px',\r\n  width: '100%',\r\n  height: 'auto'\r\n})\r\n\r\n// 3. Lightbox and Image Component\r\n\r\nconst CircularLoading = circularLoading({\r\n  // Distance of dot from center `em`\r\n  distance: 1,\r\n  // Dot's size `em`\r\n  dotSize: 0.3,\r\n  // A number of dots\r\n  num: 10,\r\n  // Dot's color (base color)\r\n  dotColor0: `rgba(255, 255, 255, 0.1)`,\r\n  // Dot's color (semi highlight color)\r\n  dotColor1: `rgba(255 ,255, 255, 0.2)`,\r\n  // Dot's color (highlight color)\r\n  dotColor2: `rgba(255 ,255, 255, 1.0)`\r\n})\r\n\r\nconst ImgLazyLoading = (props: {\r\n  imgSrc: string\r\n  style: React.CSSProperties\r\n  onClick: () => void\r\n}) => {\r\n  const [imgSrcUrl, setImgSrcUrl] = React.useState('')\r\n\r\n  React.useEffect(() => {\r\n    const ac = new AbortController()\r\n    if (props.imgSrc) {\r\n      fetch(props.imgSrc)\r\n        .then((response) => response.blob())\r\n        .then((blob) => {\r\n          setImgSrcUrl(URL.createObjectURL(blob))\r\n        })\r\n    }\r\n    return () => {\r\n      ac.abort()\r\n    } // cleanup function\r\n  }, [props.imgSrc])\r\n\r\n  if (imgSrcUrl) {\r\n    return (\r\n      <img\r\n        src={imgSrcUrl}\r\n        alt=''\r\n        style={{\r\n          ...props.style\r\n        }}\r\n        onClick={() => {\r\n          props.onClick()\r\n        }}\r\n      />\r\n    )\r\n  } else {\r\n    return (\r\n      <div\r\n        style={{\r\n          height: '100%',\r\n          width: '100%',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          alignContent: 'center',\r\n          justifyContent: 'center',\r\n          background: 'rgba(0, 0, 0, 0.157)',\r\n          border: '1px solid rgba(0, 0, 0,0.3)'\r\n        }}\r\n      >\r\n        <CircularLoading />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst ImgLightbox = (props: {\r\n  imgObj: imageObject | null\r\n  options?: Options\r\n  onClose: () => void\r\n  onNavigation: (arg0: 'next' | 'previous') => void\r\n}) => {\r\n  const [imgSrcUrl, setImgSrcUrl] = React.useState('')\r\n\r\n  React.useEffect(() => {\r\n    const imgSrc = props.imgObj?.fullSrc\r\n      ? props.imgObj.fullSrc\r\n      : props.imgObj?.thumbnailSrc\r\n      ? props.imgObj.thumbnailSrc\r\n      : null\r\n    if (imgSrc) {\r\n      fetch(imgSrc)\r\n        .then((response) => response.blob())\r\n        .then((blob) => {\r\n          setImgSrcUrl(URL.createObjectURL(blob))\r\n        })\r\n    }\r\n    // fixing body scrolling while lightbox is open\r\n    document.body.style.overflow = 'hidden'\r\n  }, [props.imgObj])\r\n\r\n  return (\r\n    <ModalDiv\r\n      className='reactPic-lightbox'\r\n      onClick={(event) => {\r\n        document.body.style.overflow = ''\r\n        const target: any = event.target\r\n\r\n        if (target.className === 'reactPic-lightbox-background') {\r\n          props.onClose()\r\n        }\r\n      }}\r\n    >\r\n      <LbButtonsDiv>\r\n        {props.options?.downloadBtnDisplay ||\r\n        props.options?.downloadCustomBtn ? (\r\n          props.options.downloadCustomBtn ? (\r\n            <ABtn href={imgSrcUrl} download>\r\n              {props.options.downloadCustomBtn()}\r\n            </ABtn>\r\n          ) : (\r\n            <LbButton href={imgSrcUrl} download>\r\n              Download\r\n            </LbButton>\r\n          )\r\n        ) : null}\r\n      </LbButtonsDiv>\r\n\r\n      {imgSrcUrl === '' ? (\r\n        <div style={{ display: 'block', margin: 'auto' }}>\r\n          <CircularLoading />\r\n        </div>\r\n      ) : (\r\n        <TransformWrapper defaultScale={1} options={{}}>\r\n          <div\r\n            className='reactPic-lightbox-background'\r\n            style={{\r\n              display: 'flex',\r\n              width: '100%',\r\n              height: props.imgObj?.description ? 'calc(100% - 95px)' : '100%',\r\n              paddingBottom: props.imgObj?.description ? 60 : 0,\r\n              paddingTop: props.imgObj?.description ? 35 : 0\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                margin: 'auto'\r\n              }}\r\n            >\r\n              <TransformComponent>\r\n                <img\r\n                  src={imgSrcUrl}\r\n                  alt=''\r\n                  id='lightboxImg'\r\n                  style={{\r\n                    maxWidth: '80vw',\r\n                    maxHeight: 'calc(80vh - 60px)',\r\n                    margin: 'auto',\r\n                    zIndex: 1000000\r\n                  }}\r\n                />\r\n              </TransformComponent>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              left: 20,\r\n              top: '50%',\r\n              fontSize:50,\r\n              cursor: 'pointer'\r\n            }}\r\n            onClick={() => {\r\n              props.onNavigation('previous')\r\n            }}\r\n          >\r\n            &#8249;\r\n          </div>\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              right: 20,\r\n              top: '50%',\r\n              fontSize:50,\r\n              cursor: 'pointer'\r\n            }}\r\n            onClick={() => {\r\n              props.onNavigation('next')\r\n            }}\r\n          >\r\n            &#8250;\r\n          </div>\r\n          {props.options?.descriptionBoxDisplay ? (\r\n            props.imgObj?.description ? (\r\n              props.options.descriptionCustomBox ? (\r\n                <props.options.descriptionCustomBox>\r\n                  {props.imgObj?.description}\r\n                </props.options.descriptionCustomBox>\r\n              ) : (\r\n                <DescriptionDiv className='reactPic-description'>\r\n                  {props.imgObj?.description}\r\n                </DescriptionDiv>\r\n              )\r\n            ) : null\r\n          ) : null}\r\n        </TransformWrapper>\r\n      )}\r\n    </ModalDiv>\r\n  )\r\n}\r\n\r\n// 4. Main Component\r\n\r\n// 4.1. Default Options\r\n\r\nconst defaultOptions: Options = {\r\n  downloadBtnDisplay: true,\r\n  descriptionBoxDisplay: true,\r\n  navigation: true\r\n}\r\n\r\n// 4.2. Main\r\n\r\nconst PicGallery = (props: { imgList: imageObject[]; options?: Options }) => {\r\n  const [open, setOpen] = React.useState(false)\r\n  const [modalImgIndex, setModalImgIndex] = React.useState<number>(0)\r\n\r\n  const options: Options = { ...defaultOptions, ...props.options }\r\n\r\n  // allowing full screen zooming on react-zoom library\r\n  const styleTag = document.querySelector('#react-pic-style')\r\n  if (!styleTag) {\r\n    const sheet = document.createElement('style')\r\n    sheet.innerHTML =\r\n      '.react-transform-component { overflow: inherit !important; }'\r\n    sheet.id = 'react-pic-style'\r\n    document.body.appendChild(sheet)\r\n  }\r\n\r\n  return (\r\n    <Wrapper className='reactPic-wrapper'>\r\n      {open ? (\r\n        <ImgLightbox\r\n          imgObj={props.imgList[modalImgIndex]}\r\n          options={options}\r\n          onNavigation={(action: 'next' | 'previous') => {\r\n            // setOpen(false);\r\n            if (\r\n              action === 'next' &&\r\n              modalImgIndex + 1 < props.imgList.length\r\n            ) {\r\n              setModalImgIndex(modalImgIndex + 1)\r\n            } else if (action === 'previous' && modalImgIndex - 1 >= 0) {\r\n              setModalImgIndex(modalImgIndex - 1)\r\n            }\r\n\r\n            // setOpen(true)\r\n          }}\r\n          onClose={() => {\r\n            setOpen(false)\r\n          }}\r\n        />\r\n      ) : null}\r\n      <Grid className='reactPic-grid'>\r\n        {props.imgList.map((element: imageObject, count: number) => {\r\n          return (\r\n            <div\r\n              key={\r\n                element.thumbnailSrc ? element.thumbnailSrc : element.fullSrc\r\n              }\r\n              className='reactPic-imgDiv'\r\n              style={{\r\n                overflow: 'hidden',\r\n                width: '100%',\r\n                height: '100%',\r\n                minHeight: '150px'\r\n              }}\r\n            >\r\n              <div\r\n                className='reactPic-innerImgDiv'\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  overflow: 'hidden !important',\r\n                  width: '100%',\r\n                  height: options.rowHeight ? options.rowHeight : '150px',\r\n                  cursor: 'pointer'\r\n                }}\r\n              >\r\n                <ImgLazyLoading\r\n                  imgSrc={\r\n                    element.thumbnailSrc\r\n                      ? element.thumbnailSrc\r\n                      : element.fullSrc\r\n                  }\r\n                  style={{\r\n                    flexShrink: 0,\r\n                    minWidth: '100%',\r\n                    minHeight: '100%'\r\n                  }}\r\n                  onClick={() => {\r\n                    setModalImgIndex(count)\r\n                    setOpen(!open)\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </Grid>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PicGallery\r\n","import React from 'react'\r\nimport PicGallery, { imageObject, Options } from 'react-pic-gallery'\r\nimport './App.css'\r\n\r\nconst listOfImages:imageObject[]=[\r\n  {thumbnailSrc:\"https://picsum.photos/id/237/200/300\",fullSrc:\"https://picsum.photos/id/237/800/600\",description:\"A Dog standing on a wooden floor\"},\r\n  {thumbnailSrc:\"https://picsum.photos/id/154/200/150\",fullSrc:\"https://picsum.photos/id/154/200/150\"},\r\n  {thumbnailSrc:\"https://picsum.photos/id/385/300/200\",fullSrc:\"https://picsum.photos/id/385/800/600\"},\r\n  {thumbnailSrc:\"https://picsum.photos/id/25/100/250\",fullSrc:\"https://picsum.photos/id/25/100/250\"},\r\n  {thumbnailSrc:\"https://picsum.photos/id/35/120/200\",fullSrc:\"https://picsum.photos/id/35/800/600\"},\r\n  {thumbnailSrc:\"https://picsum.photos/id/84/280/185\",fullSrc:\"https://picsum.photos/id/84/800/600\"},\r\n  {thumbnailSrc:\"https://picsum.photos/id/185/200/300\",fullSrc:\"https://picsum.photos/id/185/800/600\"},\r\n  {thumbnailSrc:\"https://picsum.photos/id/55/200/150\",fullSrc:\"https://picsum.photos/id/55/800/600\"},\r\n  {thumbnailSrc:\"https://picsum.photos/id/852/300/200\",fullSrc:\"https://picsum.photos/id/852/800/600\"},\r\n]\r\n\r\n// const DownBtn = ()=>{\r\n//   return <div>Download</div>\r\n// }\r\n// const DescBox = (props:{children:any})=>{\r\n//   return <div style={{background:'red'}}>{props.children}</div>\r\n// }\r\n\r\nconst options:Options = {\r\n  // downloadBtnDisplay:true,\r\n  // downloadCustomBtn:DownBtn,\r\n  // descriptionBoxDisplay:true,\r\n  // descriptionCustomBox:DescBox\r\n}\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <h1>react-pic-gallery</h1>\r\n\r\n      <PicGallery imgList={listOfImages} options={options} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}